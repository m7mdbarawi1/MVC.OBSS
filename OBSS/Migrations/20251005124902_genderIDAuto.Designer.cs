// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBSS.Data;

#nullable disable

namespace OBSS.Migrations
{
    [DbContext(typeof(OBSSContext))]
    [Migration("20251005124902_genderIDAuto")]
    partial class genderIDAuto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OBSS.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("PublishDate")
                        .HasColumnType("date");

                    b.Property<string>("PublishingHouse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QuantityInStore")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("BookId")
                        .HasName("PK__Books__3DE0C207A3C389A9");

                    b.HasIndex(new[] { "Author" }, "IX_Books_Author");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Books_CategoryId");

                    b.HasIndex(new[] { "Subject" }, "IX_Books_Subject");

                    b.HasIndex(new[] { "BookTitle" }, "IX_Books_Title");

                    b.HasIndex(new[] { "BookTitle", "Author", "PublishingHouse" }, "UQ_Books")
                        .IsUnique()
                        .HasFilter("[PublishingHouse] IS NOT NULL");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("OBSS.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId")
                        .HasName("PK__Cart__51BCD7B7D7B5FC01");

                    b.HasIndex("UserId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("OBSS.Models.CartDetail", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("OBSS.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A0BC79E268A");

                    b.HasIndex(new[] { "CategoryDesc" }, "UQ__Categori__9D2327C6134478E5")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OBSS.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("GenderId")
                        .HasName("PK__Genders__4E24E9F7FD79FB19");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("OBSS.Models.Rate", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Rate1")
                        .HasColumnType("int")
                        .HasColumnName("Rate");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Rate", (string)null);
                });

            modelBuilder.Entity("OBSS.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<DateOnly>("SaleDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SaleId")
                        .HasName("PK__Sales__1EE3C3FF18E58646");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("OBSS.Models.SalesDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("DetailId");

                    b.HasIndex("BookId");

                    b.HasIndex("SaleId");

                    b.ToTable("SalesDetails");
                });

            modelBuilder.Entity("OBSS.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C79AD15C7");

                    b.HasIndex("GenderId");

                    b.HasIndex("UserType");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053417EDEF4C")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F284561B947A5D")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OBSS.Models.UserType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("TypeDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TypeId")
                        .HasName("PK__UserType__516F03B5617729E9");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("OBSS.Models.vw_BookRating", b =>
                {
                    b.Property<decimal?>("AverageRate")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("RatingsCount")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_BookRatings", (string)null);
                });

            modelBuilder.Entity("OBSS.Models.Book", b =>
                {
                    b.HasOne("OBSS.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Books__CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OBSS.Models.Cart", b =>
                {
                    b.HasOne("OBSS.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Carts__UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OBSS.Models.CartDetail", b =>
                {
                    b.HasOne("OBSS.Models.Book", "Book")
                        .WithMany("CartDetails")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__CartDetai__BookI__656C112C");

                    b.HasOne("OBSS.Models.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CartDetai__CartI__6477ECF3");

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("OBSS.Models.Rate", b =>
                {
                    b.HasOne("OBSS.Models.Book", "Book")
                        .WithMany("Rates")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Rate__BookId__5CD6CB2B");

                    b.HasOne("OBSS.Models.User", "User")
                        .WithMany("Rates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Rates__UserId");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OBSS.Models.Sale", b =>
                {
                    b.HasOne("OBSS.Models.User", "User")
                        .WithMany("Sales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Sales__UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OBSS.Models.SalesDetail", b =>
                {
                    b.HasOne("OBSS.Models.Book", "Book")
                        .WithMany("SalesDetails")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__SalesDeta__BookI__6D0D32F4");

                    b.HasOne("OBSS.Models.Sale", "Sale")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SalesDeta__SaleI__6C190EBB");

                    b.Navigation("Book");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("OBSS.Models.User", b =>
                {
                    b.HasOne("OBSS.Models.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Users__GenderId__5165187F");

                    b.HasOne("OBSS.Models.UserType", "UserTypeNavigation")
                        .WithMany("Users")
                        .HasForeignKey("UserType")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Users__UserType__5070F446");

                    b.Navigation("Gender");

                    b.Navigation("UserTypeNavigation");
                });

            modelBuilder.Entity("OBSS.Models.Book", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("Rates");

                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("OBSS.Models.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("OBSS.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("OBSS.Models.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OBSS.Models.Sale", b =>
                {
                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("OBSS.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Rates");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("OBSS.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
